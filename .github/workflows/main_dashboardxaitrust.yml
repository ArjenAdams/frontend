name: Deploy built frontend to Azure Web App - dashboardxaitrust

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Stap 1: Haal de code op uit de repository
      - uses: actions/checkout@v4

      # Stap 2: Controleer of Node.js is ge√Ønstalleerd (voor 'serve')
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Stap 3: Controleer of build-directory aanwezig is
      - name: Verify build directory exists
        run: |
          if [ ! -d "./build" ]; then
            echo "Build directory not found! Ensure the frontend is already built before deploying."
            exit 1
          fi

      # Stap 4: Verwijder oude bestanden op de App Service
      - name: Clean existing files on Azure Web App
        run: |
          curl -X POST "https://${{ secrets.AZURE_APP_SERVICE_NAME }}.scm.azurewebsites.net/api/command" \
          -u "$${{ secrets.AZURE_APP_SERVICE_USERNAME }}:${{ secrets.AZURE_APP_SERVICE_PASSWORD }}" \
          -d '{"command": "rm -rf /home/site/wwwroot/*"}'

      # Stap 5: Kopieer nieuwe build files
      - name: Deploy new build files
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'dashboardxaitrust'
          slot-name: 'Production'
          package: ./build
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE }}

      # Stap 6: Installeer en start 'serve' op de App Service
      - name: Run serve on App Service
        run: |
          curl -X POST "https://${{ secrets.AZURE_APP_SERVICE_NAME }}.scm.azurewebsites.net/api/command" \
          -u "$${{ secrets.AZURE_APP_SERVICE_USERNAME }}:${{ secrets.AZURE_APP_SERVICE_PASSWORD }}" \
          -d '{"command": "npm install -g serve && serve -l 8080 /home/site/wwwroot"}'
