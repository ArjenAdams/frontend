{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjen\\\\Downloads\\\\testazure\\\\frontend\\\\src\\\\components\\\\Charts\\\\Histogram.js\";\nimport React from \"react\";\nimport Plot from \"react-plotly.js\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Histogram extends React.Component {\n  constructor(props) {\n    super(props);\n    const data1 = this.generateRandomData(500, 1, 5);\n    const data2 = this.generateRandomData(500, 1, 10);\n    this.state = {\n      data: [{\n        x: data1,\n        name: \"control\",\n        autobinx: false,\n        histnorm: \"count\",\n        marker: {\n          color: \"rgba(255, 100, 102, 0.7)\",\n          line: {\n            color: \"rgba(255, 100, 102, 1)\",\n            width: 1\n          }\n        },\n        opacity: 0.5,\n        type: \"histogram\",\n        xbins: {\n          end: 2.8,\n          size: 0.06,\n          start: 0.5\n        }\n      }, {\n        x: data2,\n        name: \"experimental\",\n        autobinx: false,\n        marker: {\n          color: \"rgba(100, 200, 102, 0.7)\",\n          line: {\n            color: \"rgba(100, 200, 102, 1)\",\n            width: 1\n          }\n        },\n        opacity: 0.75,\n        type: \"histogram\",\n        xbins: {\n          end: 4,\n          size: 0.06,\n          start: -3.2\n        }\n      }],\n      layout: {\n        autosize: true,\n        bargap: 0.05,\n        bargroupgap: 0.2,\n        barmode: \"overlay\",\n        margin: {\n          l: 75,\n          r: 75,\n          b: 75,\n          t: 75,\n          pad: 4\n        },\n        title: {\n          text: this.props.title,\n          font: {\n            size: 24\n          }\n        },\n        xaxis: {\n          ticks: \"\",\n          side: \"bottom\",\n          title: {\n            text: this.props.xAxisTitle,\n            font: {\n              size: 36\n            }\n          },\n          tickfont: {\n            size: 20\n          }\n        },\n        yaxis: {\n          ticks: \"\",\n          ticksuffix: \" \",\n          title: {\n            text: this.props.yAxisTitle,\n            font: {\n              size: 36\n            }\n          },\n          tickfont: {\n            size: 20\n          }\n        }\n      }\n    };\n  }\n  generateRandomData(length, min, max) {\n    const data = [];\n    for (let i = 0; i < length; i++) {\n      const k = Math.random();\n      data.push(k * (max - min) + min);\n    }\n    return data;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart\",\n          children: /*#__PURE__*/_jsxDEV(Plot, {\n            data: this.state.data,\n            layout: this.state.layout,\n            useResizeHandler: true,\n            style: {\n              width: \"100%\",\n              height: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default Histogram;","map":{"version":3,"names":["React","Plot","Card","CardBody","jsxDEV","_jsxDEV","Histogram","Component","constructor","props","data1","generateRandomData","data2","state","data","x","name","autobinx","histnorm","marker","color","line","width","opacity","type","xbins","end","size","start","layout","autosize","bargap","bargroupgap","barmode","margin","l","r","b","t","pad","title","text","font","xaxis","ticks","side","xAxisTitle","tickfont","yaxis","ticksuffix","yAxisTitle","length","min","max","i","k","Math","random","push","render","children","className","useResizeHandler","style","height","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/arjen/Downloads/testazure/frontend/src/components/Charts/Histogram.js"],"sourcesContent":["import React from \"react\";\r\nimport Plot from \"react-plotly.js\";\r\nimport {Card, CardBody} from \"reactstrap\";\r\n\r\nclass Histogram extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const data1 = this.generateRandomData(500, 1, 5);\r\n        const data2 = this.generateRandomData(500, 1, 10);\r\n\r\n        this.state = {\r\n            data: [\r\n                {\r\n                    x: data1,\r\n                    name: \"control\",\r\n                    autobinx: false,\r\n                    histnorm: \"count\",\r\n                    marker: {\r\n                        color: \"rgba(255, 100, 102, 0.7)\",\r\n                        line: {\r\n                            color: \"rgba(255, 100, 102, 1)\",\r\n                            width: 1,\r\n                        },\r\n                    },\r\n                    opacity: 0.5,\r\n                    type: \"histogram\",\r\n                    xbins: {\r\n                        end: 2.8,\r\n                        size: 0.06,\r\n                        start: 0.5,\r\n                    },\r\n                },\r\n                {\r\n                    x: data2,\r\n                    name: \"experimental\",\r\n                    autobinx: false,\r\n                    marker: {\r\n                        color: \"rgba(100, 200, 102, 0.7)\",\r\n                        line: {\r\n                            color: \"rgba(100, 200, 102, 1)\",\r\n                            width: 1,\r\n                        },\r\n                    },\r\n                    opacity: 0.75,\r\n                    type: \"histogram\",\r\n                    xbins: {\r\n                        end: 4,\r\n                        size: 0.06,\r\n                        start: -3.2,\r\n                    },\r\n                },\r\n            ],\r\n            layout: {\r\n                autosize: true,\r\n                bargap: 0.05,\r\n                bargroupgap: 0.2,\r\n                barmode: \"overlay\",\r\n                margin: {\r\n                    l: 75,\r\n                    r: 75,\r\n                    b: 75,\r\n                    t: 75,\r\n                    pad: 4,\r\n                },\r\n                title: {\r\n                    text: this.props.title,\r\n                    font: {\r\n                        size: 24,\r\n                    },\r\n                },\r\n                xaxis: {\r\n                    ticks: \"\",\r\n                    side: \"bottom\",\r\n                    title: {\r\n                        text: this.props.xAxisTitle,\r\n                        font: {\r\n                            size: 36,\r\n                        },\r\n                    },\r\n                    tickfont: {\r\n                        size: 20,\r\n                    },\r\n                },\r\n                yaxis: {\r\n                    ticks: \"\",\r\n                    ticksuffix: \" \",\r\n                    title: {\r\n                        text: this.props.yAxisTitle,\r\n                        font: {\r\n                            size: 36,\r\n                        },\r\n                    },\r\n                    tickfont: {\r\n                        size: 20,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n    }\r\n\r\n    generateRandomData(length, min, max) {\r\n        const data = [];\r\n        for (let i = 0; i < length; i++) {\r\n            const k = Math.random();\r\n            data.push(k * (max - min) + min);\r\n        }\r\n        return data;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card>\r\n                <CardBody>\r\n                    <div className=\"chart\">\r\n                        <Plot\r\n                            data={this.state.data}\r\n                            layout={this.state.layout}\r\n                            useResizeHandler={true}\r\n                            style={{width: \"100%\", height: \"100%\"}}\r\n                        />\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Histogram;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}