{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjen\\\\Downloads\\\\testazure\\\\frontend\\\\src\\\\views\\\\Counterfactual.js\",\n  _s = $RefreshSig$();\nimport CounterfactualValues from \"../components/Counterfactual/CounterfactualValues\";\nimport DashboardInfoCard from \"../components/InformationCards/DashboardInfoCard\";\nimport React, { useEffect, useState } from \"react\";\nimport { fetchCounterfactualData, fetchPatientData, fetchPredictionData, setCounterfactualData } from \"../handler/sessionStorageHandler\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Counterfactual() {\n  _s();\n  const [counterfactuals, setCounterfactuals] = useState({});\n  const [patient, setPatient] = useState({});\n  const [prediction, setPrediction] = useState({});\n  const [method, setMethod] = useState('GENETIC');\n  const handleChangeMethod = event => {\n    setMethod(event.target.value);\n  };\n  const [hoeveelheid_counterfactuals, setHoeveelheid_counterfactuals] = useState(2);\n  const handleChangeHoeveelheid = event => {\n    const value = event.target.value;\n    // Optional: Additional validation to ensure the value is a number\n    if (!isNaN(value) && value !== '') {\n      setHoeveelheid_counterfactuals(parseInt(value));\n    }\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const patientData = await fetchPatientData();\n      setPatient(patientData);\n      const predictionData = await fetchPredictionData();\n      setPrediction(predictionData);\n      await getCounterfactuals(patientData);\n      const counterfactualData = await fetchCounterfactualData();\n      setCounterfactuals(counterfactualData);\n    };\n    fetchData();\n  }, []);\n  const cardInfo = {\n    \"Patient ID\": (patient === null || patient === void 0 ? void 0 : patient.ID) || \"\",\n    \"Prediction\": prediction.prediction || 0,\n    \"Probability\": prediction.confidence || 0\n  };\n  const getCounterfactuals = async patientData => {\n    try {\n      console.log(\"Fetching counterfactuals\");\n      console.log(patientData);\n      console.log(hoeveelheid_counterfactuals);\n      console.log(method);\n      let gender = 0;\n      console.log(patient);\n      // Gender converten naar getallen\n      if (patientData['gender'].value === \"M\") {\n        gender = 1;\n      }\n      const response = await fetch(\"http://localhost:5000/counterfactual\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"data\": {\n            \"age\": patientData.age,\n            \"weight\": patientData.weight,\n            \"gender\": gender,\n            \"temperature\": patientData.temperature,\n            \"heart_rate\": patientData.heart_rate,\n            \"resp_rate\": patientData.resp_rate,\n            \"spo2\": patientData.spo2,\n            \"sbp\": patientData.sbp,\n            \"dbp\": patientData.dbp,\n            \"mbp\": patientData.mbp,\n            \"wbc\": patientData.wbc,\n            \"hemoglobin\": patientData.hemoglobin,\n            \"platelet\": patientData.platelet,\n            \"bun\": patientData.bun,\n            \"cr\": patientData.cr,\n            \"glu\": patientData.glu,\n            \"Na\": patientData.Na,\n            \"Cl\": patientData.Cl,\n            \"K\": patientData.K,\n            \"Mg\": patientData.Mg,\n            \"Ca\": patientData.Ca,\n            \"P\": patientData.P,\n            \"inr\": patientData.inr,\n            \"pt\": patientData.pt,\n            \"ptt\": patientData.ptt,\n            \"bicarbonate\": patientData.bicarbonate,\n            \"aniongap\": patientData.aniongap,\n            \"gcs\": patientData.gcs,\n            \"vent\": patientData.vent,\n            \"crrt\": patientData.crrt,\n            \"vaso\": patientData.vaso,\n            \"seda\": patientData.seda,\n            \"sofa_score\": patientData.sofa_score,\n            \"ami\": patientData.ami,\n            \"ckd\": patientData.ckd,\n            \"copd\": patientData.copd,\n            \"hyperte\": patientData.hyperte,\n            \"dm\": patientData.dm,\n            \"aki\": patientData.aki,\n            \"stroke\": patientData.stroke,\n            \"AISAN\": patientData.AISAN,\n            \"BLACK\": patientData.BLACK,\n            \"HISPANIC\": patientData.HISPANIC,\n            \"OTHER\": patientData.OTHER,\n            \"WHITE\": patientData.WHITE,\n            \"unknown\": patientData.unknown,\n            \"CCU\": patientData.CCU,\n            \"CVICU\": patientData.CVICU,\n            \"MICU\": patientData.MICU,\n            \"MICU/SICU\": patientData[\"MICU/SICU\"],\n            \"NICU\": patientData.NICU,\n            \"SICU\": patientData.SICU,\n            \"TSICU\": patientData.TSICU\n          },\n          \"method\": method,\n          \"amount\": hoeveelheid_counterfactuals\n        })\n      });\n      const counterfactuals = await response.json();\n      if (response.status !== 200) {\n        throw new Error(counterfactuals);\n      }\n      setCounterfactualData(counterfactuals);\n      setCounterfactuals(counterfactuals);\n      console.log(\"Counterfactuals:\");\n      console.log(counterfactuals);\n      return counterfactuals;\n    } catch (Error) {\n      console.log(Error);\n      window.alert(Error);\n    }\n  };\n  async function getCounter() {\n    try {\n      let patientData = patient;\n      console.log(\"Fetching counterfactuals\");\n      console.log(patientData);\n      console.log(hoeveelheid_counterfactuals);\n      console.log(method);\n      let gender = 0;\n      console.log(patient);\n      // Gender converten naar getallen\n      if (patientData['gender'].value === \"M\") {\n        gender = 1;\n      }\n      const response = await fetch(\"http://localhost:5000/counterfactual\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          \"data\": {\n            \"age\": patientData.age,\n            \"weight\": patientData.weight,\n            \"gender\": gender,\n            \"temperature\": patientData.temperature,\n            \"heart_rate\": patientData.heart_rate,\n            \"resp_rate\": patientData.resp_rate,\n            \"spo2\": patientData.spo2,\n            \"sbp\": patientData.sbp,\n            \"dbp\": patientData.dbp,\n            \"mbp\": patientData.mbp,\n            \"wbc\": patientData.wbc,\n            \"hemoglobin\": patientData.hemoglobin,\n            \"platelet\": patientData.platelet,\n            \"bun\": patientData.bun,\n            \"cr\": patientData.cr,\n            \"glu\": patientData.glu,\n            \"Na\": patientData.Na,\n            \"Cl\": patientData.Cl,\n            \"K\": patientData.K,\n            \"Mg\": patientData.Mg,\n            \"Ca\": patientData.Ca,\n            \"P\": patientData.P,\n            \"inr\": patientData.inr,\n            \"pt\": patientData.pt,\n            \"ptt\": patientData.ptt,\n            \"bicarbonate\": patientData.bicarbonate,\n            \"aniongap\": patientData.aniongap,\n            \"gcs\": patientData.gcs,\n            \"vent\": patientData.vent,\n            \"crrt\": patientData.crrt,\n            \"vaso\": patientData.vaso,\n            \"seda\": patientData.seda,\n            \"sofa_score\": patientData.sofa_score,\n            \"ami\": patientData.ami,\n            \"ckd\": patientData.ckd,\n            \"copd\": patientData.copd,\n            \"hyperte\": patientData.hyperte,\n            \"dm\": patientData.dm,\n            \"aki\": patientData.aki,\n            \"stroke\": patientData.stroke,\n            \"AISAN\": patientData.AISAN,\n            \"BLACK\": patientData.BLACK,\n            \"HISPANIC\": patientData.HISPANIC,\n            \"OTHER\": patientData.OTHER,\n            \"WHITE\": patientData.WHITE,\n            \"unknown\": patientData.unknown,\n            \"CCU\": patientData.CCU,\n            \"CVICU\": patientData.CVICU,\n            \"MICU\": patientData.MICU,\n            \"MICU/SICU\": patientData[\"MICU/SICU\"],\n            \"NICU\": patientData.NICU,\n            \"SICU\": patientData.SICU,\n            \"TSICU\": patientData.TSICU\n          },\n          \"method\": method,\n          \"amount\": hoeveelheid_counterfactuals\n        })\n      });\n      const counterfactuals = await response.json();\n      if (response.status !== 200) {\n        throw new Error(counterfactuals);\n      }\n      setCounterfactualData(counterfactuals);\n      setCounterfactuals(counterfactuals);\n      console.log(\"Counterfactuals:\");\n      console.log(counterfactuals);\n      return counterfactuals;\n    } catch (Error) {\n      console.log(Error);\n      window.alert(Error);\n    }\n  }\n  const handleSubmit = event => {\n    event.preventDefault();\n    getCounter();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(DashboardInfoCard, {\n        cardInformation: cardInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type counterfactual:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: method,\n          onChange: handleChangeMethod,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"RANDOM\",\n            children: \"RANDOM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"GENETIC\",\n            children: \"GENETIC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"KDTREE\",\n            children: \"KDTREE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Aantal counterfactuals:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: hoeveelheid_counterfactuals,\n          placeholder: \"Voer hier het aantal counterfactuals in!\",\n          onChange: handleChangeHoeveelheid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), patient.ID !== undefined && counterfactuals !== undefined ? /*#__PURE__*/_jsxDEV(CounterfactualValues, {\n        patient: patient,\n        counterfactuals: counterfactuals,\n        prediction: prediction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading patient data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Counterfactual, \"M1wfqrB3ow7jNyWP6IhEg6J58zY=\");\n_c = Counterfactual;\nexport default Counterfactual;\nvar _c;\n$RefreshReg$(_c, \"Counterfactual\");","map":{"version":3,"names":["CounterfactualValues","DashboardInfoCard","React","useEffect","useState","fetchCounterfactualData","fetchPatientData","fetchPredictionData","setCounterfactualData","jsxDEV","_jsxDEV","Fragment","_Fragment","Counterfactual","_s","counterfactuals","setCounterfactuals","patient","setPatient","prediction","setPrediction","method","setMethod","handleChangeMethod","event","target","value","hoeveelheid_counterfactuals","setHoeveelheid_counterfactuals","handleChangeHoeveelheid","isNaN","parseInt","fetchData","patientData","predictionData","getCounterfactuals","counterfactualData","cardInfo","ID","confidence","console","log","gender","response","fetch","headers","body","JSON","stringify","age","weight","temperature","heart_rate","resp_rate","spo2","sbp","dbp","mbp","wbc","hemoglobin","platelet","bun","cr","glu","Na","Cl","K","Mg","Ca","P","inr","pt","ptt","bicarbonate","aniongap","gcs","vent","crrt","vaso","seda","sofa_score","ami","ckd","copd","hyperte","dm","aki","stroke","AISAN","BLACK","HISPANIC","OTHER","WHITE","unknown","CCU","CVICU","MICU","NICU","SICU","TSICU","json","status","Error","window","alert","getCounter","handleSubmit","preventDefault","children","className","cardInformation","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","type","placeholder","onClick","undefined","_c","$RefreshReg$"],"sources":["C:/Users/arjen/Downloads/testazure/frontend/src/views/Counterfactual.js"],"sourcesContent":["import CounterfactualValues\r\n    from \"../components/Counterfactual/CounterfactualValues\";\r\nimport DashboardInfoCard\r\n    from \"../components/InformationCards/DashboardInfoCard\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {\r\n    fetchCounterfactualData,\r\n    fetchPatientData,\r\n    fetchPredictionData,\r\n    setCounterfactualData\r\n} from \"../handler/sessionStorageHandler\";\r\n\r\nfunction Counterfactual() {\r\n    const [counterfactuals, setCounterfactuals] = useState({});\r\n    const [patient, setPatient] = useState({});\r\n    const [prediction, setPrediction] = useState({});\r\n    const [method, setMethod] = useState('GENETIC');\r\n    const handleChangeMethod = (event) => {\r\n        setMethod(event.target.value);\r\n    };\r\n    const [hoeveelheid_counterfactuals, setHoeveelheid_counterfactuals] = useState(2);\r\n    const handleChangeHoeveelheid = (event) => {\r\n        const value = event.target.value;\r\n        // Optional: Additional validation to ensure the value is a number\r\n        if (!isNaN(value) && value !== '') {\r\n            setHoeveelheid_counterfactuals(parseInt(value));\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const patientData = await fetchPatientData();\r\n            setPatient(patientData);\r\n            const predictionData = await fetchPredictionData();\r\n            setPrediction(predictionData)\r\n            await getCounterfactuals(patientData);\r\n            const counterfactualData = await fetchCounterfactualData();\r\n            setCounterfactuals(counterfactualData);\r\n        };\r\n        fetchData();\r\n    }, []);\r\n\r\n    const cardInfo = {\r\n        \"Patient ID\": patient?.ID || \"\",\r\n        \"Prediction\": prediction.prediction || 0,\r\n        \"Probability\": prediction.confidence || 0\r\n    };\r\n\r\n    const getCounterfactuals = async (patientData) => {\r\n        try {\r\n            console.log(\"Fetching counterfactuals\")\r\n            console.log(patientData)\r\n            console.log(hoeveelheid_counterfactuals)\r\n            console.log(method)\r\n            let gender = 0\r\n            console.log(patient)\r\n            // Gender converten naar getallen\r\n            if (patientData['gender'].value === \"M\") {\r\n                gender = 1\r\n            }\r\n            const response = await fetch(\"http://localhost:5000/counterfactual\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    \"data\": {\r\n                        \"age\": patientData.age,\r\n                        \"weight\": patientData.weight,\r\n                        \"gender\": gender,\r\n                        \"temperature\": patientData.temperature,\r\n                        \"heart_rate\": patientData.heart_rate,\r\n                        \"resp_rate\": patientData.resp_rate,\r\n                        \"spo2\": patientData.spo2,\r\n                        \"sbp\": patientData.sbp,\r\n                        \"dbp\": patientData.dbp,\r\n                        \"mbp\": patientData.mbp,\r\n                        \"wbc\": patientData.wbc,\r\n                        \"hemoglobin\": patientData.hemoglobin,\r\n                        \"platelet\": patientData.platelet,\r\n                        \"bun\": patientData.bun,\r\n                        \"cr\": patientData.cr,\r\n                        \"glu\": patientData.glu,\r\n                        \"Na\": patientData.Na,\r\n                        \"Cl\": patientData.Cl,\r\n                        \"K\": patientData.K,\r\n                        \"Mg\": patientData.Mg,\r\n                        \"Ca\": patientData.Ca,\r\n                        \"P\": patientData.P,\r\n                        \"inr\": patientData.inr,\r\n                        \"pt\": patientData.pt,\r\n                        \"ptt\": patientData.ptt,\r\n                        \"bicarbonate\": patientData.bicarbonate,\r\n                        \"aniongap\": patientData.aniongap,\r\n                        \"gcs\": patientData.gcs,\r\n                        \"vent\": patientData.vent,\r\n                        \"crrt\": patientData.crrt,\r\n                        \"vaso\": patientData.vaso,\r\n                        \"seda\": patientData.seda,\r\n                        \"sofa_score\": patientData.sofa_score,\r\n                        \"ami\": patientData.ami,\r\n                        \"ckd\": patientData.ckd,\r\n                        \"copd\": patientData.copd,\r\n                        \"hyperte\": patientData.hyperte,\r\n                        \"dm\": patientData.dm,\r\n                        \"aki\": patientData.aki,\r\n                        \"stroke\": patientData.stroke,\r\n                        \"AISAN\": patientData.AISAN,\r\n                        \"BLACK\": patientData.BLACK,\r\n                        \"HISPANIC\": patientData.HISPANIC,\r\n                        \"OTHER\": patientData.OTHER,\r\n                        \"WHITE\": patientData.WHITE,\r\n                        \"unknown\": patientData.unknown,\r\n                        \"CCU\": patientData.CCU,\r\n                        \"CVICU\": patientData.CVICU,\r\n                        \"MICU\": patientData.MICU,\r\n                        \"MICU/SICU\": patientData[\"MICU/SICU\"],\r\n                        \"NICU\": patientData.NICU,\r\n                        \"SICU\": patientData.SICU,\r\n                        \"TSICU\": patientData.TSICU\r\n                    }, \"method\": method,\r\n                    \"amount\": hoeveelheid_counterfactuals\r\n                }),\r\n            });\r\n            const counterfactuals = await response.json();\r\n            if (response.status !== 200) {\r\n                throw new Error(counterfactuals)\r\n            }\r\n            setCounterfactualData(counterfactuals);\r\n            setCounterfactuals(counterfactuals);\r\n            console.log(\"Counterfactuals:\")\r\n            console.log(counterfactuals)\r\n            return counterfactuals;\r\n        } catch (Error) {\r\n            console.log(Error)\r\n            window.alert(Error)\r\n        }\r\n\r\n    }\r\n\r\n\r\n    async function getCounter() {\r\n        try {\r\n            let patientData = patient\r\n            console.log(\"Fetching counterfactuals\")\r\n            console.log(patientData)\r\n            console.log(hoeveelheid_counterfactuals)\r\n            console.log(method)\r\n            let gender = 0\r\n            console.log(patient)\r\n            // Gender converten naar getallen\r\n            if (patientData['gender'].value === \"M\") {\r\n                gender = 1\r\n            }\r\n            const response = await fetch(\"http://localhost:5000/counterfactual\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    \"data\": {\r\n                        \"age\": patientData.age,\r\n                        \"weight\": patientData.weight,\r\n                        \"gender\": gender,\r\n                        \"temperature\": patientData.temperature,\r\n                        \"heart_rate\": patientData.heart_rate,\r\n                        \"resp_rate\": patientData.resp_rate,\r\n                        \"spo2\": patientData.spo2,\r\n                        \"sbp\": patientData.sbp,\r\n                        \"dbp\": patientData.dbp,\r\n                        \"mbp\": patientData.mbp,\r\n                        \"wbc\": patientData.wbc,\r\n                        \"hemoglobin\": patientData.hemoglobin,\r\n                        \"platelet\": patientData.platelet,\r\n                        \"bun\": patientData.bun,\r\n                        \"cr\": patientData.cr,\r\n                        \"glu\": patientData.glu,\r\n                        \"Na\": patientData.Na,\r\n                        \"Cl\": patientData.Cl,\r\n                        \"K\": patientData.K,\r\n                        \"Mg\": patientData.Mg,\r\n                        \"Ca\": patientData.Ca,\r\n                        \"P\": patientData.P,\r\n                        \"inr\": patientData.inr,\r\n                        \"pt\": patientData.pt,\r\n                        \"ptt\": patientData.ptt,\r\n                        \"bicarbonate\": patientData.bicarbonate,\r\n                        \"aniongap\": patientData.aniongap,\r\n                        \"gcs\": patientData.gcs,\r\n                        \"vent\": patientData.vent,\r\n                        \"crrt\": patientData.crrt,\r\n                        \"vaso\": patientData.vaso,\r\n                        \"seda\": patientData.seda,\r\n                        \"sofa_score\": patientData.sofa_score,\r\n                        \"ami\": patientData.ami,\r\n                        \"ckd\": patientData.ckd,\r\n                        \"copd\": patientData.copd,\r\n                        \"hyperte\": patientData.hyperte,\r\n                        \"dm\": patientData.dm,\r\n                        \"aki\": patientData.aki,\r\n                        \"stroke\": patientData.stroke,\r\n                        \"AISAN\": patientData.AISAN,\r\n                        \"BLACK\": patientData.BLACK,\r\n                        \"HISPANIC\": patientData.HISPANIC,\r\n                        \"OTHER\": patientData.OTHER,\r\n                        \"WHITE\": patientData.WHITE,\r\n                        \"unknown\": patientData.unknown,\r\n                        \"CCU\": patientData.CCU,\r\n                        \"CVICU\": patientData.CVICU,\r\n                        \"MICU\": patientData.MICU,\r\n                        \"MICU/SICU\": patientData[\"MICU/SICU\"],\r\n                        \"NICU\": patientData.NICU,\r\n                        \"SICU\": patientData.SICU,\r\n                        \"TSICU\": patientData.TSICU\r\n                    }, \"method\": method,\r\n                    \"amount\": hoeveelheid_counterfactuals\r\n                }),\r\n            });\r\n            const counterfactuals = await response.json();\r\n\r\n            if (response.status !== 200) {\r\n                throw new Error(counterfactuals)\r\n            }\r\n            setCounterfactualData(counterfactuals);\r\n            setCounterfactuals(counterfactuals);\r\n            console.log(\"Counterfactuals:\")\r\n            console.log(counterfactuals)\r\n            return counterfactuals;\r\n        } catch (Error) {\r\n            console.log(Error)\r\n            window.alert(Error)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        getCounter();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"content\">\r\n                <DashboardInfoCard cardInformation={cardInfo}/>\r\n                <form onSubmit={handleSubmit}>\r\n                    <label>Type counterfactual:</label>\r\n                    <select value={method} onChange={handleChangeMethod}>\r\n                        <option value=\"RANDOM\">RANDOM</option>\r\n                        <option value=\"GENETIC\">GENETIC</option>\r\n                        <option value=\"KDTREE\">KDTREE</option>\r\n                    </select>\r\n                    <label>Aantal counterfactuals:</label>\r\n                    <input type=\"number\"\r\n                           value={hoeveelheid_counterfactuals}\r\n                           placeholder=\"Voer hier het aantal counterfactuals in!\"\r\n                           onChange={handleChangeHoeveelheid}/>\r\n                    <button onClick={handleSubmit}>Submit</button>\r\n                </form>\r\n                {patient.ID !== undefined && counterfactuals !== undefined ? (\r\n                    <CounterfactualValues patient={patient}\r\n                                          counterfactuals={counterfactuals}\r\n                                          prediction={prediction}/>\r\n                ) : (\r\n                    <p>Loading patient data...</p>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Counterfactual;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}