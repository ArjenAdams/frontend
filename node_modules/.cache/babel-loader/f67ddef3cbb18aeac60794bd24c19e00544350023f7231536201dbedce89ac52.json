{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjen\\\\Downloads\\\\testazure\\\\frontend\\\\src\\\\views\\\\Shap_Plots.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction GenerateShapPlot(_ref) {\n  let {\n    shap_image\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"head\", {\n        children: [/*#__PURE__*/_jsxDEV(\"meta\", {\n          charset: \"UTF-8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n          name: \"viewport\",\n          content: \"width=device-width, initial-scale=1.0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"SHAP Plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: shap_image !== undefined && shap_image !== null && shap_image !== \"\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"shap-plot-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"xgboost_image\",\n            src: `data:image/png;base64,${shap_image}`,\n            alt: \"explanation graph\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading shap data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = GenerateShapPlot;\nexport default GenerateShapPlot;\nvar _c;\n$RefreshReg$(_c, \"GenerateShapPlot\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","GenerateShapPlot","_ref","shap_image","children","className","charset","fileName","_jsxFileName","lineNumber","columnNumber","name","content","undefined","id","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/arjen/Downloads/testazure/frontend/src/views/Shap_Plots.js"],"sourcesContent":["import React from \"react\";\r\n\r\nfunction GenerateShapPlot({shap_image}) {\r\n    return (\r\n        <>\r\n            <div className={\"content\"}>\r\n                <head>\r\n                    <meta charset=\"UTF-8\"/>\r\n                    <meta name=\"viewport\"\r\n                          content=\"width=device-width, initial-scale=1.0\"/>\r\n                    <title>SHAP Plot</title>\r\n                </head>\r\n                <body>\r\n                {shap_image !== undefined && shap_image !== null && shap_image !== \"\" ? (\r\n                    <div id=\"shap-plot-container\">\r\n                        <img className={\"xgboost_image\"}\r\n                             src={`data:image/png;base64,${shap_image}`}\r\n                             alt={\"explanation graph\"}/>\r\n                    </div>\r\n                ) : (\r\n                    <p>Loading shap data...</p>\r\n                )}\r\n                </body>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default GenerateShapPlot;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,gBAAgBA,CAAAC,IAAA,EAAe;EAAA,IAAd;IAACC;EAAU,CAAC,GAAAD,IAAA;EAClC,oBACIJ,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACIN,OAAA;MAAKO,SAAS,EAAE,SAAU;MAAAD,QAAA,gBACtBN,OAAA;QAAAM,QAAA,gBACIN,OAAA;UAAMQ,OAAO,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvBZ,OAAA;UAAMa,IAAI,EAAC,UAAU;UACfC,OAAO,EAAC;QAAuC;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACvDZ,OAAA;UAAAM,QAAA,EAAO;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACPZ,OAAA;QAAAM,QAAA,EACCD,UAAU,KAAKU,SAAS,IAAIV,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,EAAE,gBACjEL,OAAA;UAAKgB,EAAE,EAAC,qBAAqB;UAAAV,QAAA,eACzBN,OAAA;YAAKO,SAAS,EAAE,eAAgB;YAC3BU,GAAG,EAAE,yBAAyBZ,UAAU,EAAG;YAC3Ca,GAAG,EAAE;UAAoB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,gBAENZ,OAAA;UAAAM,QAAA,EAAG;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC7B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC,gBACR,CAAC;AAEX;AAACO,EAAA,GAxBQhB,gBAAgB;AA0BzB,eAAeA,gBAAgB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}