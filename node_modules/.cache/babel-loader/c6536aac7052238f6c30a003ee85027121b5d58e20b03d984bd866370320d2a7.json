{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjen\\\\Downloads\\\\testazure\\\\frontend\\\\src\\\\views\\\\Patient.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport SearchPatient from '../components/Patient/SearchPatient.js';\nimport PatientTable from '../components/Patient/PatientTable.js';\nimport { useFetch } from \"../handler/useFetch\";\nimport API_URL from \"../handler/api.js\";\nimport LoadingScreen from \"../handler/loading\";\nimport ErrorScreen from \"../handler/error\";\nimport { backendConnection } from \"../handler/backendConnection\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Patient = () => {\n  _s();\n  const {\n    data,\n    isLoading,\n    error,\n    refetch\n  } = useFetch(API_URL + \"data\", 'get', true, 10);\n  const [patientsData, setPatientsData] = useState([]);\n  const [filteredPatients, setFilteredPatients] = useState([]);\n  const [searchValues, setSearchValues] = useState({});\n  const [pressed, setPressed] = useState(false);\n  useEffect(() => {\n    if (data && data.length > 0) {\n      const headers = ['ID', 'AGE', 'WEIGHT', 'GENDER', 'ETHNICITY', 'ICU', \"SAD\"];\n      const initialSearchValues = headers.reduce((acc, header) => {\n        acc[header] = {\n          value: ''\n        };\n        acc[header].value = null;\n        return acc;\n      }, {});\n      setSearchValues(initialSearchValues);\n      setPatientsData(data);\n      setFilteredPatients(data); // add this line\n    }\n  }, [data]);\n  const handleSearchValueChange = event => {\n    let setName = null;\n    let setValue = null;\n    console.log(event.target.type);\n    if (event.target.type === \"checkbox\") {\n      console.log(event.target.checked);\n      let tf = event.target.checked;\n      setName = event.target.name;\n      setValue = tf;\n    } else {\n      let {\n        name,\n        type,\n        value\n      } = event.target;\n      setName = name;\n      setValue = value;\n      if (value === \"\" || value === null) {\n        setValue = null;\n      }\n    }\n    setSearchValues(prevValues => ({\n      ...prevValues,\n      [setName]: setValue\n    }));\n  };\n  const handleSearch = async e => {\n    console.log(`Searching for patient with criteria: `, searchValues);\n    e.preventDefault();\n    let searchValueData = null;\n    try {\n      searchValueData = await backendConnection(searchValues);\n    } catch (error) {\n      console.error(\"Error fetching data from database\", error);\n    }\n    setFilteredPatients(searchValueData);\n  };\n  if (isLoading) return /*#__PURE__*/_jsxDEV(LoadingScreen, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorScreen, {\n    errorMessage: error.message,\n    buttonFunction: refetch,\n    isPressed: false\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(SearchPatient, {\n        searchValues: searchValues,\n        handleSearchValueChange: handleSearchValueChange,\n        handleSearch: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PatientTable, {\n        patients: filteredPatients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Patient, \"amECPHA1yMtRqKRtR59ylwEIgBM=\", false, function () {\n  return [useFetch];\n});\n_c = Patient;\nexport default Patient;\nvar _c;\n$RefreshReg$(_c, \"Patient\");","map":{"version":3,"names":["React","useEffect","useState","SearchPatient","PatientTable","useFetch","API_URL","LoadingScreen","ErrorScreen","backendConnection","jsxDEV","_jsxDEV","Fragment","_Fragment","Patient","_s","data","isLoading","error","refetch","patientsData","setPatientsData","filteredPatients","setFilteredPatients","searchValues","setSearchValues","pressed","setPressed","length","headers","initialSearchValues","reduce","acc","header","value","handleSearchValueChange","event","setName","setValue","console","log","target","type","checked","tf","name","prevValues","handleSearch","e","preventDefault","searchValueData","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","message","buttonFunction","isPressed","children","className","patients","_c","$RefreshReg$"],"sources":["C:/Users/arjen/Downloads/testazure/frontend/src/views/Patient.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport SearchPatient from '../components/Patient/SearchPatient.js';\r\nimport PatientTable from '../components/Patient/PatientTable.js';\r\nimport {useFetch} from \"../handler/useFetch\";\r\nimport API_URL from \"../handler/api.js\";\r\nimport LoadingScreen from \"../handler/loading\";\r\nimport ErrorScreen from \"../handler/error\";\r\nimport {backendConnection} from \"../handler/backendConnection\";\r\n\r\nconst Patient = () => {\r\n    const {\r\n        data,\r\n        isLoading,\r\n        error,\r\n        refetch\r\n    } = useFetch(API_URL + \"data\", 'get', true, 10);\r\n\r\n    const [patientsData, setPatientsData] = useState([]);\r\n    const [filteredPatients, setFilteredPatients] = useState([]);\r\n    const [searchValues, setSearchValues] = useState({});\r\n    const [pressed, setPressed] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (data && data.length > 0) {\r\n            const headers = ['ID', 'AGE', 'WEIGHT', 'GENDER', 'ETHNICITY', 'ICU', \"SAD\"];\r\n\r\n\r\n            const initialSearchValues = headers.reduce((acc, header) => {\r\n                acc[header] = {value: ''};\r\n                acc[header].value = null;\r\n                return acc;\r\n            }, {});\r\n\r\n            setSearchValues(initialSearchValues);\r\n            setPatientsData(data);\r\n            setFilteredPatients(data);  // add this line\r\n\r\n        }\r\n    }, [data]);\r\n\r\n    const handleSearchValueChange = (event) => {\r\n        let setName = null;\r\n        let setValue = null;\r\n\r\n        console.log(event.target.type)\r\n\r\n        if (event.target.type === \"checkbox\") {\r\n            console.log(event.target.checked)\r\n            let tf = event.target.checked;\r\n            setName = event.target.name;\r\n            setValue = tf;\r\n        } else {\r\n            let {name, type, value,} = event.target;\r\n            setName = name;\r\n            setValue = value;\r\n            if (value === \"\" || value === null) {\r\n                setValue = null\r\n            }\r\n        }\r\n        setSearchValues((prevValues) => ({\r\n            ...prevValues,\r\n            [setName]: setValue\r\n        }));\r\n    };\r\n\r\n\r\n    const handleSearch = async (e) => {\r\n        console.log(`Searching for patient with criteria: `, searchValues);\r\n\r\n        e.preventDefault();\r\n\r\n        let searchValueData = null;\r\n\r\n        try {\r\n            searchValueData = await backendConnection(searchValues)\r\n        } catch (error) {\r\n            console.error(\"Error fetching data from database\", error)\r\n        }\r\n\r\n        setFilteredPatients(searchValueData);\r\n    };\r\n\r\n    if (isLoading) return <LoadingScreen/>;\r\n    if (error) return <ErrorScreen errorMessage={error.message}\r\n                                   buttonFunction={refetch}\r\n                                   isPressed={false}/>;\r\n\r\n    return (\r\n        <>\r\n            <div className={\"content\"}>\r\n                <SearchPatient\r\n                    searchValues={searchValues}\r\n                    handleSearchValueChange={handleSearchValueChange}\r\n                    handleSearch={handleSearch}\r\n                />\r\n                <PatientTable patients={filteredPatients}/>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Patient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}