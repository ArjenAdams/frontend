{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\arjen\\\\Downloads\\\\testazure\\\\frontend\\\\src\\\\components\\\\Model\\\\ModelInput.js\",\n  _s = $RefreshSig$();\nimport { Card, CardBody, CardHeader, CardSubtitle, CardTitle, Col, Input, Row, Table } from 'reactstrap';\nimport React, { useEffect, useState } from \"react\";\nimport API_URL from \"../../handler/api\";\nimport { fetchPredictionData } from \"../../handler/sessionStorageHandler\";\nimport ChangeValuesModal from \"../Modals/ChangeValuesModal\";\nimport PredictionChangedModal from \"../Modals/PredictionChangedModal\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction convertToBoolean(boolean) {\n  return boolean === 1;\n}\nfunction ModelInput(_ref) {\n  _s();\n  let {\n    patient\n  } = _ref;\n  const oldPrediction = fetchPredictionData();\n  const [newPrediction, setNewPrediction] = useState({});\n  const [predictionChangedIsOpen, setPredictionChangedIsOpen] = useState(false);\n  const [valueChangedIsOpen, setValueChangedIsOpen] = useState(false);\n  const [modalFeature, setModalFeature] = useState('');\n  const humanBodyFeaturesNieuw = {\n    \"Weight\": {\n      \"value\": patient.weight,\n      \"type\": \"number\"\n    },\n    \"Temperature\": {\n      \"value\": patient.temperature,\n      \"type\": \"number\"\n    },\n    \"Heart Rate\": {\n      \"value\": patient.heart_rate,\n      \"type\": \"number\"\n    },\n    \"Respiration Rate\": {\n      \"value\": patient.resp_rate,\n      \"type\": \"number\"\n    },\n    \"Oxygen Saturation\": {\n      \"value\": patient.spo2,\n      \"type\": \"number\"\n    },\n    \"Systolic Blood Pressure\": {\n      \"value\": patient.sbp,\n      \"type\": \"number\"\n    },\n    \"Diastolic Blood Pressure\": {\n      \"value\": patient.dbp,\n      \"type\": \"number\"\n    },\n    \"Mean Blood Pressure\": {\n      \"value\": patient.mbp,\n      \"type\": \"number\"\n    },\n    \"White Blood Cell Count\": {\n      \"value\": patient.wbc,\n      \"type\": \"number\"\n    },\n    \"Hemoglobin\": {\n      \"value\": patient.hemoglobin,\n      \"type\": \"number\"\n    },\n    \"Platelet Count\": {\n      \"value\": patient.platelet,\n      \"type\": \"number\"\n    },\n    \"Blood Urea Nitrogen\": {\n      \"value\": patient.bun,\n      \"type\": \"number\"\n    },\n    \"Creatinine\": {\n      \"value\": patient.cr,\n      \"type\": \"number\"\n    },\n    \"Glucose\": {\n      \"value\": patient.glu,\n      \"type\": \"number\"\n    },\n    \"Sodium\": {\n      \"value\": patient.Na,\n      \"type\": \"number\"\n    },\n    \"Chloride\": {\n      \"value\": patient.Cl,\n      \"type\": \"number\"\n    },\n    \"Potassium\": {\n      \"value\": patient.K,\n      \"type\": \"number\"\n    },\n    \"Magnesium\": {\n      \"value\": patient.Mg,\n      \"type\": \"number\"\n    },\n    \"Calcium\": {\n      \"value\": patient.Ca,\n      \"type\": \"number\"\n    },\n    \"Phosphorus\": {\n      \"value\": patient.P,\n      \"type\": \"number\"\n    },\n    \"International Normalized Ratio\": {\n      \"value\": patient.inr,\n      \"type\": \"number\"\n    },\n    \"Prothrombin Time\": {\n      \"value\": patient.pt,\n      \"type\": \"number\"\n    },\n    \"Partial Thromboplastin Time\": {\n      \"value\": patient.ptt,\n      \"type\": \"number\"\n    },\n    \"Bicarbonate\": {\n      \"value\": patient.bicarbonate,\n      \"type\": \"number\"\n    },\n    \"Anion Gap\": {\n      \"value\": patient.aniongap,\n      \"type\": \"number\"\n    },\n    \"Glasgow Coma Scale\": {\n      \"value\": patient.gcs,\n      \"type\": \"number\"\n    },\n    \"Ventilation\": {\n      \"value\": patient.vent,\n      \"type\": \"number\"\n    },\n    \"Continuous Renal Replacement Therapy\": {\n      \"value\": patient.crrt,\n      \"type\": \"number\"\n    },\n    \"Vasoconstrictors\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.vaso,\n      \"type\": \"number\"\n    },\n    \"Sedatives\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.seda,\n      \"type\": \"number\"\n    },\n    \"Sequential Organ Failure Assessment Score\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.sofa_score,\n      \"type\": \"number\"\n    },\n    \"Acute Myocardial Infarction\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.ami,\n      \"type\": \"number\"\n    },\n    \"Chronic Kidney Disease\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.ckd,\n      \"type\": \"number\"\n    },\n    \"Chronic Obstructive Pulmonary Disease\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.copd,\n      \"type\": \"number\"\n    },\n    \"Hypertension\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.hyperte,\n      \"type\": \"number\"\n    },\n    \"Diabetes Mellitus\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.dm,\n      \"type\": \"number\"\n    },\n    \"Acute Kidney Injury\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.aki,\n      \"type\": \"number\"\n    },\n    \"Stroke\": {\n      \"value\": patient === null || patient === void 0 ? void 0 : patient.stroke,\n      \"type\": \"number\"\n    },\n    \"Aisan\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.AISAN),\n      \"type\": \"boolean\"\n    },\n    \"Black\": {\n      \"value\": convertToBoolean(patient.BLACK),\n      \"type\": \"boolean\"\n    },\n    \"Hispanic\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.HISPANIC),\n      \"type\": \"boolean\"\n    },\n    \"Other\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.OTHER),\n      \"type\": \"boolean\"\n    },\n    \"White\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.WHITE),\n      \"type\": \"boolean\"\n    },\n    \"Unknown\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.unknown),\n      \"type\": \"boolean\"\n    },\n    \"Coronary Care Unit\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.CCU),\n      \"type\": \"boolean\"\n    },\n    \"Cardiovascular Intensive Care Unit\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.CVICU),\n      \"type\": \"boolean\"\n    },\n    \"Mobile Intensive Care Unit\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.MICU),\n      \"type\": \"boolean\"\n    },\n    \"Mobile/Surgical Intensive Care Unit\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.MICU_SICU),\n      \"type\": \"boolean\"\n    },\n    \"Neonatal Intensive Care Unit\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.NICU),\n      \"type\": \"boolean\"\n    },\n    \"Surgical Intensive Care Unit\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.SICU),\n      \"type\": \"boolean\"\n    },\n    \"Trauma Intensive Care Unit\": {\n      \"value\": convertToBoolean(patient === null || patient === void 0 ? void 0 : patient.TSICU),\n      \"type\": \"boolean\"\n    }\n  };\n  const [updatedFeatures, setUpdatedFeatures] = useState(humanBodyFeaturesNieuw);\n  useEffect(() => {\n    if (!fetchPredictionData()) {\n      setNewPrediction({\n        'prediction': 0,\n        'confidence': 0\n      });\n    } else {\n      const predictionData = fetchPredictionData();\n      setNewPrediction({\n        'prediction': predictionData['prediction'],\n        'confidence': predictionData['confidence']\n      });\n    }\n  }, []);\n  const inputHandler = event => {\n    const updatedFeature = event.target.title;\n    switch (typeof updatedFeatures[updatedFeature].value) {\n      case \"number\":\n        updatedFeatures[updatedFeature].value = Number(event.target.value);\n        break;\n      case \"string\":\n        updatedFeatures[updatedFeature].value = String(event.target.value);\n        break;\n      //TODO: Dropdown voor Units en Etniciteit maken.\n      case \"boolean\":\n        if (event.target.value.toString().toLowerCase() === \"true\") {\n          updatedFeatures[updatedFeature].value = true;\n          break;\n        }\n        if (event.target.value.toString().toLowerCase() === \"false\") {\n          updatedFeatures[updatedFeature].value = false;\n          break;\n        }\n        break;\n      default:\n        updatedFeatures[updatedFeature].value = String(event.target.value);\n        break;\n    }\n  };\n  const translatePrediction = prediction => {\n    if (Number(prediction) < 0.5) {\n      return \"Nee\";\n    } else if (Number(prediction) >= 0.5) {\n      return \"Ja\";\n    } else {\n      return \"Unknown\";\n    }\n  };\n  const predictionHandler = async () => {\n    setValueChangedIsOpen(false);\n    const response = await fetch(API_URL + \"predict\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"age\": patient.age,\n        \"weight\": updatedFeatures['Weight'].value,\n        \"gender\": patient.gender,\n        \"temperature\": updatedFeatures['Temperature'].value,\n        \"heart_rate\": updatedFeatures['Heart Rate'].value,\n        \"resp_rate\": updatedFeatures['Respiration Rate'].value,\n        \"spo2\": updatedFeatures['Oxygen Saturation'].value,\n        \"sbp\": updatedFeatures['Systolic Blood Pressure'].value,\n        \"dbp\": updatedFeatures['Diastolic Blood Pressure'].value,\n        \"mbp\": updatedFeatures['Mean Blood Pressure'].value,\n        \"wbc\": updatedFeatures['White Blood Cell Count'].value,\n        \"hemoglobin\": updatedFeatures['Hemoglobin'].value,\n        \"platelet\": updatedFeatures['Platelet Count'].value,\n        \"bun\": updatedFeatures['Blood Urea Nitrogen'].value,\n        \"cr\": updatedFeatures['Creatinine'].value,\n        \"glu\": updatedFeatures['Glucose'].value,\n        \"Na\": updatedFeatures['Sodium'].value,\n        \"Cl\": updatedFeatures['Chloride'].value,\n        \"K\": updatedFeatures['Potassium'].value,\n        \"Mg\": updatedFeatures['Magnesium'].value,\n        \"Ca\": updatedFeatures['Calcium'].value,\n        \"P\": updatedFeatures['Phosphorus'].value,\n        \"inr\": updatedFeatures['International Normalized Ratio'].value,\n        \"pt\": updatedFeatures['Prothrombin Time'].value,\n        \"ptt\": updatedFeatures['Partial Thromboplastin Time'].value,\n        \"bicarbonate\": updatedFeatures['Bicarbonate'].value,\n        \"aniongap\": updatedFeatures['Anion Gap'].value,\n        \"gcs\": updatedFeatures['Glasgow Coma Scale'].value,\n        \"vent\": updatedFeatures['Ventilation'].value,\n        \"crrt\": updatedFeatures['Continuous Renal Replacement Therapy'].value,\n        \"vaso\": updatedFeatures['Vasoconstrictors'].value,\n        \"seda\": updatedFeatures['Sedatives'].value,\n        \"sofa_score\": updatedFeatures['Sequential Organ Failure Assessment Score'].value,\n        \"ami\": updatedFeatures['Acute Myocardial Infarction'].value,\n        \"ckd\": updatedFeatures['Chronic Kidney Disease'].value,\n        \"copd\": updatedFeatures['Chronic Obstructive Pulmonary Disease'].value,\n        \"hyperte\": updatedFeatures['Hypertension'].value,\n        \"dm\": updatedFeatures['Diabetes Mellitus'].value,\n        \"aki\": updatedFeatures['Acute Kidney Injury'].value,\n        \"stroke\": updatedFeatures['Stroke'].value,\n        \"AISAN\": updatedFeatures['Aisan'].value,\n        \"BLACK\": updatedFeatures['Black'].value,\n        \"HISPANIC\": updatedFeatures['Hispanic'].value,\n        \"OTHER\": updatedFeatures['Other'].value,\n        \"WHITE\": updatedFeatures['White'].value,\n        \"unknown\": updatedFeatures['Unknown'].value,\n        \"CCU\": updatedFeatures['Coronary Care Unit'].value,\n        \"CVICU\": updatedFeatures['Cardiovascular Intensive Care Unit'].value,\n        \"MICU\": updatedFeatures['Mobile Intensive Care Unit'].value,\n        \"MICU/SICU\": updatedFeatures['Mobile/Surgical Intensive Care Unit'].value,\n        \"NICU\": updatedFeatures['Neonatal Intensive Care Unit'].value,\n        \"SICU\": updatedFeatures['Surgical Intensive Care Unit'].value,\n        \"TSICU\": updatedFeatures['Trauma Intensive Care Unit'].value\n      })\n    });\n    const predictionString = await response.json();\n    const prediction = JSON.parse(predictionString);\n    setNewPrediction({\n      'prediction': prediction.prediction,\n      'confidence': prediction.confidence\n    });\n    if (oldPrediction.prediction !== prediction.prediction) {\n      togglePredictionChangedModal();\n    }\n  };\n  const titles = Object.keys(humanBodyFeaturesNieuw);\n  let origineleWaarden = [];\n  for (const title in humanBodyFeaturesNieuw) {\n    const value = humanBodyFeaturesNieuw[title].value;\n    const type = humanBodyFeaturesNieuw[title].type;\n    origineleWaarden.push([value, type]);\n  }\n  const data = titles.map((title, index) => ({\n    id: index + 1,\n    gegevens: title,\n    origineleWaarde: origineleWaarden[index][0],\n    typeInput: origineleWaarden[index][1],\n    nieuweWaarde: updatedFeatures[title].value\n  }));\n  function colorRow(row) {\n    if (row.nieuweWaarde === row.origineleWaarde) {\n      return \"td-values\";\n    } else {\n      return \"row-color\";\n    }\n  }\n  const handleNextInputField = e => {\n    getChangedFeatures();\n    setModalFeature(e.target.title);\n    if (e.key !== 'Enter') {\n      return;\n    }\n    let targetId = Number(e.target.id);\n    const table = document.querySelector(\"#input-fields-table\");\n    const childrenNodes = table.children;\n    if (targetId === childrenNodes.length) {\n      targetId = 0;\n    }\n\n    // Focus on the next item in the input list\n    childrenNodes.item(targetId).children.item(2).firstChild.focus();\n\n    // Dont toggle the modal if the value hasn't changed\n    const tempTitle = e.target.title;\n    if (humanBodyFeaturesNieuw[tempTitle].value === e.target.value) {\n      // Using == instead of === for values that are 0\n      return;\n    }\n    toggleValueChangedModal();\n  };\n  const getChangedFeatures = () => {\n    let changedFeatureTitles = [];\n    titles.forEach(title => {\n      if (humanBodyFeaturesNieuw[title].value !== updatedFeatures[title].value) {\n        changedFeatureTitles.push(title);\n      }\n    });\n    return changedFeatureTitles;\n  };\n  const toggleValueChangedModal = () => {\n    setValueChangedIsOpen(!valueChangedIsOpen);\n  };\n  const togglePredictionChangedModal = () => {\n    setPredictionChangedIsOpen(!predictionChangedIsOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ChangeValuesModal, {\n      isOpen: valueChangedIsOpen,\n      toggle: toggleValueChangedModal,\n      makePrediction: predictionHandler,\n      feature: modalFeature\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PredictionChangedModal, {\n      isOpen: predictionChangedIsOpen,\n      toggle: togglePredictionChangedModal,\n      newPrediction: translatePrediction(newPrediction.prediction),\n      previousPrediction: translatePrediction(oldPrediction.prediction),\n      newCertaintyScore: newPrediction.confidence,\n      previousCertaintyScore: oldPrediction.confidence,\n      features: getChangedFeatures()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          className: \"text-dark text-2rem\",\n          children: \"Pati\\xEBntkenmerken wijzigen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n          className: \"text-muted text-1rem\",\n          children: \"Verander de pati\\xEBntkenmerken om te zien hoe de voorspelling verandert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Gegevens\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"th-align-middle\",\n                    children: \"Originele waarde\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 468,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Voer nieuwe waarde in\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 466,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                id: \"input-fields-table\",\n                children: data.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  id: row.id,\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `${colorRow(row)} td-left-align`,\n                    children: row.gegevens\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 477,\n                    columnNumber: 41\n                  }, this), typeof row.origineleWaarde === \"number\" && row.origineleWaarde.toString().includes(\".\") ? /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `${colorRow(row)} td-values`,\n                    children: Number.parseFloat(row.origineleWaarde).toFixed(2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 482,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `${colorRow(row)} td-values`,\n                    children: row.origineleWaarde\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 484,\n                    columnNumber: 45\n                  }, this), typeof row.nieuweWaarde === \"number\" && row.nieuweWaarde.toString().includes(\".\") ? /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `${colorRow(row)} td-values`,\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      id: row.id,\n                      title: row.gegevens,\n                      onKeyDown: handleNextInputField,\n                      type: row.typeInput,\n                      placeholder: \"Enter \" + row.typeInput,\n                      defaultValue: Number.parseFloat(row.nieuweWaarde).toFixed(2),\n                      onChange: inputHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 488,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 45\n                  }, this) : /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: `${colorRow(row)} td-values`,\n                    children: /*#__PURE__*/_jsxDEV(Input, {\n                      id: row.id,\n                      title: row.gegevens,\n                      onKeyDown: handleNextInputField,\n                      type: row.typeInput,\n                      placeholder: \"Enter \" + row.typeInput,\n                      defaultValue: row.nieuweWaarde,\n                      onChange: inputHandler\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 500,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 45\n                  }, this)]\n                }, row.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 476,\n                  columnNumber: 37\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            children: [/*#__PURE__*/_jsxDEV(CardSubtitle, {\n              className: \"CardSubtitle_newPred\",\n              children: \"Nieuwe voorspelling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"numbers\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"card-category text-blue font-weight-bolder\",\n                    children: \"Heeft SAD?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"numbers text-center\",\n                  children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                    className: \"font-italic size1-5rem font-weight-bold\",\n                    children: translatePrediction(newPrediction.prediction)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 527,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 526,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"numbers\",\n                  children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                    className: \"card-category font-weight-bold\",\n                    children: \"Certainty Score\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 538,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 537,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"numbers text-center\",\n                  children: /*#__PURE__*/_jsxDEV(CardTitle, {\n                    className: \"font-italic size1-5rem font-weight-bold\",\n                    children: newPrediction.confidence\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-primary\",\n                onClick: toggleValueChangedModal,\n                children: \"Nieuwe Voorspelling Opslaan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ModelInput, \"7ZjV+CxB7HLeKTGRT1xw0bMEDNE=\");\n_c = ModelInput;\nexport default ModelInput;\nvar _c;\n$RefreshReg$(_c, \"ModelInput\");","map":{"version":3,"names":["Card","CardBody","CardHeader","CardSubtitle","CardTitle","Col","Input","Row","Table","React","useEffect","useState","API_URL","fetchPredictionData","ChangeValuesModal","PredictionChangedModal","jsxDEV","_jsxDEV","Fragment","_Fragment","convertToBoolean","boolean","ModelInput","_ref","_s","patient","oldPrediction","newPrediction","setNewPrediction","predictionChangedIsOpen","setPredictionChangedIsOpen","valueChangedIsOpen","setValueChangedIsOpen","modalFeature","setModalFeature","humanBodyFeaturesNieuw","weight","temperature","heart_rate","resp_rate","spo2","sbp","dbp","mbp","wbc","hemoglobin","platelet","bun","cr","glu","Na","Cl","K","Mg","Ca","P","inr","pt","ptt","bicarbonate","aniongap","gcs","vent","crrt","vaso","seda","sofa_score","ami","ckd","copd","hyperte","dm","aki","stroke","AISAN","BLACK","HISPANIC","OTHER","WHITE","unknown","CCU","CVICU","MICU","MICU_SICU","NICU","SICU","TSICU","updatedFeatures","setUpdatedFeatures","predictionData","inputHandler","event","updatedFeature","target","title","value","Number","String","toString","toLowerCase","translatePrediction","prediction","predictionHandler","response","fetch","method","headers","body","JSON","stringify","age","gender","predictionString","json","parse","confidence","togglePredictionChangedModal","titles","Object","keys","origineleWaarden","type","push","data","map","index","id","gegevens","origineleWaarde","typeInput","nieuweWaarde","colorRow","row","handleNextInputField","e","getChangedFeatures","key","targetId","table","document","querySelector","childrenNodes","children","length","item","firstChild","focus","tempTitle","toggleValueChangedModal","changedFeatureTitles","forEach","isOpen","toggle","makePrediction","feature","fileName","_jsxFileName","lineNumber","columnNumber","previousPrediction","newCertaintyScore","previousCertaintyScore","features","className","md","includes","parseFloat","toFixed","onKeyDown","placeholder","defaultValue","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/arjen/Downloads/testazure/frontend/src/components/Model/ModelInput.js"],"sourcesContent":["import {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    CardSubtitle,\r\n    CardTitle,\r\n    Col,\r\n    Input,\r\n    Row,\r\n    Table\r\n} from 'reactstrap';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport API_URL from \"../../handler/api\";\r\nimport {fetchPredictionData} from \"../../handler/sessionStorageHandler\";\r\nimport ChangeValuesModal from \"../Modals/ChangeValuesModal\";\r\nimport PredictionChangedModal from \"../Modals/PredictionChangedModal\";\r\n\r\nfunction convertToBoolean(boolean) {\r\n    return boolean === 1;\r\n}\r\n\r\nfunction ModelInput({patient}) {\r\n    const oldPrediction = fetchPredictionData();\r\n    const [newPrediction, setNewPrediction] = useState({})\r\n    const [predictionChangedIsOpen, setPredictionChangedIsOpen] = useState(false);\r\n    const [valueChangedIsOpen, setValueChangedIsOpen] = useState(false);\r\n    const [modalFeature, setModalFeature] = useState('')\r\n\r\n    const humanBodyFeaturesNieuw = {\r\n        \"Weight\": {\r\n            \"value\": patient.weight,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Temperature\": {\r\n            \"value\": patient.temperature,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Heart Rate\": {\r\n            \"value\": patient.heart_rate,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Respiration Rate\": {\r\n            \"value\": patient.resp_rate,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Oxygen Saturation\": {\r\n            \"value\": patient.spo2,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Systolic Blood Pressure\": {\r\n            \"value\": patient.sbp,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Diastolic Blood Pressure\": {\r\n            \"value\": patient.dbp,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Mean Blood Pressure\": {\r\n            \"value\": patient.mbp,\r\n            \"type\": \"number\"\r\n        },\r\n        \"White Blood Cell Count\": {\r\n            \"value\": patient.wbc,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Hemoglobin\": {\r\n            \"value\": patient.hemoglobin,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Platelet Count\": {\r\n            \"value\": patient.platelet,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Blood Urea Nitrogen\": {\r\n            \"value\": patient.bun,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Creatinine\": {\r\n            \"value\": patient.cr,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Glucose\": {\r\n            \"value\": patient.glu,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Sodium\": {\r\n            \"value\": patient.Na,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Chloride\": {\r\n            \"value\": patient.Cl,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Potassium\": {\r\n            \"value\": patient.K,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Magnesium\": {\r\n            \"value\": patient.Mg,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Calcium\": {\r\n            \"value\": patient.Ca,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Phosphorus\": {\r\n            \"value\": patient.P,\r\n            \"type\": \"number\"\r\n        },\r\n        \"International Normalized Ratio\": {\r\n            \"value\": patient.inr,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Prothrombin Time\": {\r\n            \"value\": patient.pt,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Partial Thromboplastin Time\": {\r\n            \"value\": patient.ptt,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Bicarbonate\": {\r\n            \"value\": patient.bicarbonate,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Anion Gap\": {\r\n            \"value\": patient.aniongap,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Glasgow Coma Scale\": {\r\n            \"value\": patient.gcs,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Ventilation\": {\r\n            \"value\": patient.vent,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Continuous Renal Replacement Therapy\": {\r\n            \"value\": patient.crrt,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Vasoconstrictors\": {\r\n            \"value\": patient?.vaso,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Sedatives\": {\r\n            \"value\": patient?.seda,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Sequential Organ Failure Assessment Score\": {\r\n            \"value\": patient?.sofa_score,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Acute Myocardial Infarction\": {\r\n            \"value\": patient?.ami,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Chronic Kidney Disease\": {\r\n            \"value\": patient?.ckd,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Chronic Obstructive Pulmonary Disease\": {\r\n            \"value\": patient?.copd,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Hypertension\": {\r\n            \"value\": patient?.hyperte,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Diabetes Mellitus\": {\r\n            \"value\": patient?.dm,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Acute Kidney Injury\": {\r\n            \"value\": patient?.aki,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Stroke\": {\r\n            \"value\": patient?.stroke,\r\n            \"type\": \"number\"\r\n        },\r\n        \"Aisan\": {\r\n            \"value\": convertToBoolean(patient?.AISAN),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Black\": {\r\n            \"value\": convertToBoolean(patient.BLACK),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Hispanic\": {\r\n            \"value\": convertToBoolean(patient?.HISPANIC),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Other\": {\r\n            \"value\": convertToBoolean(patient?.OTHER),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"White\": {\r\n            \"value\": convertToBoolean(patient?.WHITE),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Unknown\": {\r\n            \"value\": convertToBoolean(patient?.unknown),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Coronary Care Unit\": {\r\n            \"value\": convertToBoolean(patient?.CCU),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Cardiovascular Intensive Care Unit\": {\r\n            \"value\": convertToBoolean(patient?.CVICU),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Mobile Intensive Care Unit\": {\r\n            \"value\": convertToBoolean(patient?.MICU),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Mobile/Surgical Intensive Care Unit\": {\r\n            \"value\": convertToBoolean(patient?.MICU_SICU),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Neonatal Intensive Care Unit\": {\r\n            \"value\": convertToBoolean(patient?.NICU),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Surgical Intensive Care Unit\": {\r\n            \"value\": convertToBoolean(patient?.SICU),\r\n            \"type\": \"boolean\"\r\n        },\r\n        \"Trauma Intensive Care Unit\": {\r\n            \"value\": convertToBoolean(patient?.TSICU),\r\n            \"type\": \"boolean\"\r\n        }\r\n    }\r\n\r\n    const [updatedFeatures, setUpdatedFeatures] = useState(humanBodyFeaturesNieuw);\r\n    useEffect(() => {\r\n        if (!fetchPredictionData()) {\r\n            setNewPrediction({'prediction': 0, 'confidence': 0});\r\n        } else {\r\n            const predictionData = fetchPredictionData();\r\n            setNewPrediction({\r\n                'prediction': predictionData['prediction'],\r\n                'confidence': predictionData['confidence']\r\n            });\r\n        }\r\n    }, []);\r\n\r\n\r\n    const inputHandler = (event) => {\r\n        const updatedFeature = event.target.title\r\n        switch (typeof updatedFeatures[updatedFeature].value) {\r\n            case \"number\":\r\n                updatedFeatures[updatedFeature].value = Number(event.target.value)\r\n                break;\r\n            case \"string\":\r\n                updatedFeatures[updatedFeature].value = String(event.target.value)\r\n                break;\r\n            //TODO: Dropdown voor Units en Etniciteit maken.\r\n            case \"boolean\":\r\n                if (event.target.value.toString().toLowerCase() === \"true\") {\r\n                    updatedFeatures[updatedFeature].value = true\r\n                    break;\r\n                }\r\n                if (event.target.value.toString().toLowerCase() === \"false\") {\r\n                    updatedFeatures[updatedFeature].value = false\r\n                    break;\r\n                }\r\n                break;\r\n            default:\r\n                updatedFeatures[updatedFeature].value = String(event.target.value)\r\n                break;\r\n        }\r\n    }\r\n\r\n    const translatePrediction = (prediction) => {\r\n        if (Number(prediction) < 0.5) {\r\n            return \"Nee\"\r\n        } else if (Number(prediction) >= 0.5) {\r\n            return \"Ja\"\r\n        } else {\r\n            return \"Unknown\"\r\n        }\r\n    }\r\n\r\n    const predictionHandler = async () => {\r\n        setValueChangedIsOpen(false);\r\n\r\n        const response = await fetch(API_URL + \"predict\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    \"age\": patient.age,\r\n                    \"weight\": updatedFeatures['Weight'].value,\r\n                    \"gender\": patient.gender,\r\n                    \"temperature\": updatedFeatures['Temperature'].value,\r\n                    \"heart_rate\": updatedFeatures['Heart Rate'].value,\r\n                    \"resp_rate\": updatedFeatures['Respiration Rate'].value,\r\n                    \"spo2\": updatedFeatures['Oxygen Saturation'].value,\r\n                    \"sbp\": updatedFeatures['Systolic Blood Pressure'].value,\r\n                    \"dbp\": updatedFeatures['Diastolic Blood Pressure'].value,\r\n                    \"mbp\": updatedFeatures['Mean Blood Pressure'].value,\r\n                    \"wbc\": updatedFeatures['White Blood Cell Count'].value,\r\n                    \"hemoglobin\": updatedFeatures['Hemoglobin'].value,\r\n                    \"platelet\": updatedFeatures['Platelet Count'].value,\r\n                    \"bun\": updatedFeatures['Blood Urea Nitrogen'].value,\r\n                    \"cr\": updatedFeatures['Creatinine'].value,\r\n                    \"glu\": updatedFeatures['Glucose'].value,\r\n                    \"Na\": updatedFeatures['Sodium'].value,\r\n                    \"Cl\": updatedFeatures['Chloride'].value,\r\n                    \"K\": updatedFeatures['Potassium'].value,\r\n                    \"Mg\": updatedFeatures['Magnesium'].value,\r\n                    \"Ca\": updatedFeatures['Calcium'].value,\r\n                    \"P\": updatedFeatures['Phosphorus'].value,\r\n                    \"inr\": updatedFeatures['International Normalized Ratio'].value,\r\n                    \"pt\": updatedFeatures['Prothrombin Time'].value,\r\n                    \"ptt\": updatedFeatures['Partial Thromboplastin Time'].value,\r\n                    \"bicarbonate\": updatedFeatures['Bicarbonate'].value,\r\n                    \"aniongap\": updatedFeatures['Anion Gap'].value,\r\n                    \"gcs\": updatedFeatures['Glasgow Coma Scale'].value,\r\n                    \"vent\": updatedFeatures['Ventilation'].value,\r\n                    \"crrt\": updatedFeatures['Continuous Renal Replacement Therapy'].value,\r\n                    \"vaso\": updatedFeatures['Vasoconstrictors'].value,\r\n                    \"seda\": updatedFeatures['Sedatives'].value,\r\n                    \"sofa_score\": updatedFeatures['Sequential Organ Failure Assessment Score'].value,\r\n                    \"ami\": updatedFeatures['Acute Myocardial Infarction'].value,\r\n                    \"ckd\": updatedFeatures['Chronic Kidney Disease'].value,\r\n                    \"copd\": updatedFeatures['Chronic Obstructive Pulmonary Disease'].value,\r\n                    \"hyperte\": updatedFeatures['Hypertension'].value,\r\n                    \"dm\": updatedFeatures['Diabetes Mellitus'].value,\r\n                    \"aki\": updatedFeatures['Acute Kidney Injury'].value,\r\n                    \"stroke\": updatedFeatures['Stroke'].value,\r\n                    \"AISAN\": updatedFeatures['Aisan'].value,\r\n                    \"BLACK\": updatedFeatures['Black'].value,\r\n                    \"HISPANIC\": updatedFeatures['Hispanic'].value,\r\n                    \"OTHER\": updatedFeatures['Other'].value,\r\n                    \"WHITE\": updatedFeatures['White'].value,\r\n                    \"unknown\": updatedFeatures['Unknown'].value,\r\n                    \"CCU\": updatedFeatures['Coronary Care Unit'].value,\r\n                    \"CVICU\": updatedFeatures['Cardiovascular Intensive Care Unit'].value,\r\n                    \"MICU\": updatedFeatures['Mobile Intensive Care Unit'].value,\r\n                    \"MICU/SICU\": updatedFeatures['Mobile/Surgical Intensive Care Unit'].value,\r\n                    \"NICU\": updatedFeatures['Neonatal Intensive Care Unit'].value,\r\n                    \"SICU\": updatedFeatures['Surgical Intensive Care Unit'].value,\r\n                    \"TSICU\": updatedFeatures['Trauma Intensive Care Unit'].value\r\n                }\r\n            )\r\n        });\r\n        const predictionString = await response.json();\r\n        const prediction = JSON.parse(predictionString);\r\n\r\n        setNewPrediction({\r\n            'prediction': prediction.prediction,\r\n            'confidence': prediction.confidence\r\n        })\r\n\r\n        if (oldPrediction.prediction !== prediction.prediction) {\r\n            togglePredictionChangedModal();\r\n        }\r\n    }\r\n\r\n    const titles = Object.keys(humanBodyFeaturesNieuw)\r\n\r\n    let origineleWaarden = [];\r\n\r\n    for (const title in humanBodyFeaturesNieuw) {\r\n        const value = humanBodyFeaturesNieuw[title].value;\r\n        const type = humanBodyFeaturesNieuw[title].type;\r\n        origineleWaarden.push([value, type])\r\n    }\r\n    const data = titles.map((title, index) => ({\r\n        id: index + 1,\r\n        gegevens: title,\r\n        origineleWaarde: origineleWaarden[index][0],\r\n        typeInput: origineleWaarden[index][1],\r\n        nieuweWaarde: updatedFeatures[title].value,\r\n    }));\r\n\r\n    function colorRow(row) {\r\n        if (row.nieuweWaarde === row.origineleWaarde) {\r\n            return \"td-values\";\r\n        } else {\r\n            return \"row-color\";\r\n        }\r\n    }\r\n\r\n    const handleNextInputField = (e) => {\r\n        getChangedFeatures();\r\n        setModalFeature(e.target.title)\r\n        if (e.key !== 'Enter') {\r\n            return\r\n        }\r\n        let targetId = Number(e.target.id);\r\n        const table = document.querySelector(\"#input-fields-table\")\r\n        const childrenNodes = table.children\r\n\r\n        if (targetId === childrenNodes.length) {\r\n            targetId = 0\r\n        }\r\n\r\n        // Focus on the next item in the input list\r\n        childrenNodes.item(targetId).children.item(2).firstChild.focus()\r\n\r\n        // Dont toggle the modal if the value hasn't changed\r\n        const tempTitle = e.target.title\r\n\r\n        if (humanBodyFeaturesNieuw[tempTitle].value === e.target.value) { // Using == instead of === for values that are 0\r\n            return\r\n        }\r\n        toggleValueChangedModal();\r\n\r\n    }\r\n\r\n    const getChangedFeatures = () => {\r\n        let changedFeatureTitles = [];\r\n        titles.forEach((title) => {\r\n            if (humanBodyFeaturesNieuw[title].value !== updatedFeatures[title].value) {\r\n                changedFeatureTitles.push(title)\r\n            }\r\n        })\r\n\r\n        return changedFeatureTitles\r\n    }\r\n\r\n    const toggleValueChangedModal = () => {\r\n        setValueChangedIsOpen(!valueChangedIsOpen);\r\n    }\r\n\r\n    const togglePredictionChangedModal = () => {\r\n        setPredictionChangedIsOpen(!predictionChangedIsOpen)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <ChangeValuesModal isOpen={valueChangedIsOpen}\r\n                               toggle={toggleValueChangedModal}\r\n                               makePrediction={predictionHandler}\r\n                               feature={modalFeature}></ChangeValuesModal>\r\n            <PredictionChangedModal isOpen={predictionChangedIsOpen}\r\n                                    toggle={togglePredictionChangedModal}\r\n                                    newPrediction={translatePrediction(newPrediction.prediction)}\r\n                                    previousPrediction={translatePrediction(oldPrediction.prediction)}\r\n                                    newCertaintyScore={newPrediction.confidence}\r\n                                    previousCertaintyScore={oldPrediction.confidence}\r\n                                    features={getChangedFeatures()}\r\n            >\r\n            </PredictionChangedModal>\r\n            <Card>\r\n                <CardHeader>\r\n                    <CardTitle className=\"text-dark text-2rem\">Patiëntkenmerken\r\n                        wijzigen</CardTitle>\r\n                    <CardSubtitle className=\"text-muted text-1rem\">\r\n                        Verander de patiëntkenmerken om te zien hoe de\r\n                        voorspelling verandert\r\n                    </CardSubtitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <Table>\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Gegevens</th>\r\n                                    <th className=\"th-align-middle\">Originele\r\n                                        waarde\r\n                                    </th>\r\n                                    <th>Voer nieuwe waarde in</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody id={\"input-fields-table\"}>\r\n                                {data.map((row) => (\r\n                                    <tr id={row.id} key={row.id}>\r\n                                        <td className={`${colorRow(row)} td-left-align`}>\r\n\r\n                                            {row.gegevens}\r\n                                        </td>\r\n                                        {typeof (row.origineleWaarde) === \"number\" && row.origineleWaarde.toString().includes(\".\") ? (\r\n                                            <td className={`${colorRow(row)} td-values`}>{Number.parseFloat(row.origineleWaarde).toFixed(2)}</td>\r\n                                        ) : (\r\n                                            <td className={`${colorRow(row)} td-values`}>{row.origineleWaarde}</td>\r\n                                        )}\r\n                                        {typeof (row.nieuweWaarde) === \"number\" && row.nieuweWaarde.toString().includes(\".\") ? (\r\n                                            <td className={`${colorRow(row)} td-values`}>\r\n                                                <Input\r\n                                                    id={row.id}\r\n                                                    title={row.gegevens}\r\n                                                    onKeyDown={handleNextInputField}\r\n                                                    type={row.typeInput}\r\n                                                    placeholder={\"Enter \" + row.typeInput}\r\n                                                    defaultValue={Number.parseFloat(row.nieuweWaarde).toFixed(2)}\r\n                                                    onChange={inputHandler}\r\n                                                />\r\n                                            </td>\r\n                                        ) : (\r\n                                            <td className={`${colorRow(row)} td-values`}>\r\n                                                <Input\r\n                                                    id={row.id}\r\n                                                    title={row.gegevens}\r\n                                                    onKeyDown={handleNextInputField}\r\n                                                    type={row.typeInput}\r\n                                                    placeholder={\"Enter \" + row.typeInput}\r\n                                                    defaultValue={row.nieuweWaarde}\r\n                                                    onChange={inputHandler}\r\n                                                />\r\n                                            </td>)}\r\n                                    </tr>\r\n                                ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                            <CardSubtitle className=\"CardSubtitle_newPred\">Nieuwe\r\n                                voorspelling</CardSubtitle>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <div className=\"numbers\">\r\n                                        <p className=\"card-category text-blue font-weight-bolder\">\r\n                                            Heeft SAD?\r\n                                        </p>\r\n                                    </div>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <div className=\"numbers text-center\">\r\n                                        <CardTitle\r\n                                            className=\"font-italic size1-5rem font-weight-bold\">\r\n                                            {translatePrediction(newPrediction.prediction)}\r\n                                        </CardTitle>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <div className=\"numbers\">\r\n                                        <CardTitle\r\n                                            className=\"card-category font-weight-bold\">Certainty\r\n                                            Score</CardTitle>\r\n                                    </div>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <div className=\"numbers text-center\">\r\n                                        <CardTitle\r\n                                            className=\"font-italic size1-5rem font-weight-bold\">\r\n                                            {newPrediction.confidence}\r\n                                        </CardTitle>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                            <div className=\"text-center\">\r\n                                <button className=\"btn btn-primary\"\r\n                                        onClick={toggleValueChangedModal}>Nieuwe\r\n                                    Voorspelling\r\n                                    Opslaan\r\n                                </button>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Card>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ModelInput;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}